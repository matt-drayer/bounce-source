import { orderFirstRoundMatchups } from '../orderFirstRoundMatchups';

describe('Tournament Bracket Ordering', () => {
  test.each([
    { size: 2, input: [[1, 2]], expected: [[1, 2]] },
    {
      size: 4,
      input: [
        [1, 4],
        [2, 3],
      ],
      expected: [
        [1, 4],
        [2, 3],
      ],
    },
    {
      size: 8,
      input: [
        [1, 8],
        [2, 7],
        [3, 6],
        [4, 5],
      ],
      expected: [
        [1, 8],
        [4, 5],
        [3, 6],
        [2, 7],
      ],
    },
    {
      size: 16,
      input: Array.from({ length: 8 }, (_, i) => [1 + i, 16 - i]),
      expected: [
        [1, 16],
        [8, 9],
        [5, 12],
        [4, 13],
        [6, 11],
        [3, 14],
        [7, 10],
        [2, 15],
      ],
    },
    {
      size: 32,
      input: Array.from({ length: 16 }, (_, i) => [1 + i, 32 - i]),
      expected: [
        [1, 32],
        [16, 17],
        [9, 24],
        [8, 25],
        [12, 21],
        [5, 28],
        [13, 20],
        [4, 29],
        [2, 31],
        [15, 18],
        [10, 23],
        [7, 26],
        [11, 22],
        [6, 27],
        [14, 19],
        [3, 30],
      ],
    },
    {
      size: 64,
      input: Array.from({ length: 32 }, (_, i) => [1 + i, 64 - i]),
      expected: [
        [1, 64],
        [32, 33],
        [17, 48],
        [16, 49],
        [24, 41],
        [9, 56],
        [25, 40],
        [8, 57],
        [4, 61],
        [29, 36],
        [20, 45],
        [13, 52],
        [21, 44],
        [12, 53],
        [28, 37],
        [5, 60],
        [2, 63],
        [31, 34],
        [18, 47],
        [15, 50],
        [23, 42],
        [10, 55],
        [26, 39],
        [7, 58],
        [3, 62],
        [30, 35],
        [19, 46],
        [14, 51],
        [22, 43],
        [11, 54],
        [27, 38],
        [6, 59],
      ],
    },
    {
      size: 128,
      input: Array.from({ length: 64 }, (_, i) => [1 + i, 128 - i]),
      expected: [
        [1, 128],
        [64, 65],
        [33, 96],
        [32, 97],
        [48, 81],
        [17, 112],
        [49, 80],
        [16, 113],
        [8, 121],
        [57, 72],
        [40, 89],
        [25, 104],
        [41, 88],
        [24, 105],
        [56, 73],
        [9, 120],
        [4, 125],
        [61, 68],
        [36, 93],
        [29, 100],
        [45, 84],
        [20, 109],
        [52, 77],
        [13, 116],
        [5, 124],
        [60, 69],
        [37, 92],
        [28, 101],
        [44, 85],
        [21, 108],
        [53, 76],
        [12, 117],
        [3, 126],
        [62, 67],
        [35, 94],
        [30, 99],
        [46, 83],
        [19, 110],
        [51, 78],
        [14, 115],
        [6, 123],
        [59, 70],
        [38, 91],
        [27, 102],
        [43, 86],
        [22, 107],
        [54, 75],
        [11, 118],
        [2, 127],
        [63, 66],
        [34, 95],
        [31, 98],
        [47, 82],
        [18, 111],
        [50, 79],
        [15, 114],
        [7, 122],
        [58, 71],
        [39, 90],
        [26, 103],
        [42, 87],
        [23, 106],
        [55, 74],
        [10, 119],
      ],
    },
    {
      size: 256,
      input: Array.from({ length: 128 }, (_, i) => [1 + i, 256 - i]),
      expected: [
        [1, 256],
        [128, 129],
        [65, 192],
        [64, 193],
        [96, 161],
        [33, 224],
        [97, 160],
        [32, 225],
        [16, 241],
        [113, 144],
        [80, 177],
        [49, 208],
        [81, 176],
        [48, 209],
        [112, 145],
        [17, 240],
        [8, 249],
        [121, 136],
        [72, 185],
        [57, 200],
        [89, 168],
        [40, 217],
        [104, 153],
        [25, 232],
        [9, 248],
        [120, 137],
        [73, 184],
        [56, 201],
        [88, 169],
        [41, 216],
        [105, 152],
        [24, 233],
        [5, 252],
        [124, 133],
        [69, 188],
        [60, 197],
        [92, 165],
        [37, 220],
        [101, 156],
        [28, 229],
        [12, 245],
        [117, 140],
        [76, 181],
        [53, 204],
        [85, 172],
        [44, 213],
        [108, 149],
        [21, 236],
        [4, 253],
        [125, 132],
        [68, 189],
        [61, 196],
        [93, 164],
        [36, 221],
        [100, 157],
        [29, 228],
        [13, 244],
        [116, 141],
        [77, 180],
        [52, 205],
        [84, 173],
        [45, 212],
        [109, 148],
        [20, 237],
        [6, 251],
        [123, 134],
        [70, 187],
        [59, 198],
        [91, 166],
        [38, 219],
        [102, 155],
        [27, 230],
        [11, 246],
        [118, 139],
        [75, 182],
        [54, 203],
        [86, 171],
        [43, 214],
        [107, 150],
        [22, 235],
        [3, 254],
        [126, 131],
        [67, 190],
        [62, 195],
        [94, 163],
        [35, 222],
        [99, 158],
        [30, 227],
        [14, 243],
        [115, 142],
        [78, 179],
        [51, 206],
        [83, 174],
        [46, 211],
        [110, 147],
        [19, 238],
        [7, 250],
        [122, 135],
        [71, 186],
        [58, 199],
        [90, 167],
        [39, 218],
        [103, 154],
        [26, 231],
        [10, 247],
        [119, 138],
        [74, 183],
        [55, 202],
        [87, 170],
        [42, 215],
        [106, 151],
        [23, 234],
        [2, 255],
        [127, 130],
        [66, 191],
        [63, 194],
        [95, 162],
        [34, 223],
        [98, 159],
        [31, 226],
        [15, 242],
        [114, 143],
        [79, 178],
        [50, 207],
        [82, 175],
        [47, 210],
        [111, 146],
        [18, 239],
      ],
    },
    {
      size: 512,
      input: Array.from({ length: 256 }, (_, i) => [1 + i, 512 - i]),
      expected: [
        [1, 512],
        [256, 257],
        [129, 384],
        [128, 385],
        [192, 321],
        [65, 448],
        [193, 320],
        [64, 449],
        [16, 497],
        [241, 272],
        [144, 369],
        [113, 400],
        [177, 336],
        [80, 433],
        [208, 305],
        [49, 464],
        [8, 505],
        [249, 264],
        [136, 377],
        [121, 392],
        [185, 328],
        [72, 441],
        [200, 313],
        [57, 456],
        [9, 504],
        [248, 265],
        [137, 376],
        [120, 393],
        [184, 329],
        [73, 440],
        [201, 312],
        [56, 457],
        [5, 508],
        [252, 261],
        [133, 380],
        [124, 389],
        [188, 325],
        [69, 444],
        [197, 316],
        [60, 453],
        [12, 501],
        [245, 268],
        [140, 373],
        [117, 396],
        [181, 332],
        [76, 437],
        [204, 309],
        [53, 460],
        [4, 509],
        [253, 260],
        [132, 381],
        [125, 388],
        [189, 324],
        [68, 445],
        [196, 317],
        [61, 452],
        [13, 500],
        [244, 269],
        [141, 372],
        [116, 397],
        [180, 333],
        [77, 436],
        [205, 308],
        [52, 461],
        [6, 507],
        [251, 262],
        [134, 379],
        [123, 390],
        [187, 326],
        [70, 443],
        [198, 315],
        [59, 454],
        [11, 502],
        [246, 267],
        [139, 374],
        [118, 395],
        [182, 331],
        [75, 438],
        [203, 310],
        [54, 459],
        [3, 510],
        [254, 259],
        [131, 382],
        [126, 387],
        [190, 323],
        [67, 446],
        [195, 318],
        [62, 451],
        [14, 499],
        [243, 270],
        [142, 371],
        [115, 398],
        [179, 334],
        [78, 435],
        [206, 307],
        [51, 462],
        [7, 506],
        [250, 263],
        [135, 378],
        [122, 391],
        [186, 327],
        [71, 442],
        [199, 314],
        [58, 455],
        [10, 503],
        [247, 266],
        [138, 375],
        [119, 394],
        [183, 330],
        [74, 439],
        [202, 311],
        [55, 458],
        [2, 511],
        [255, 258],
        [130, 383],
        [127, 386],
        [191, 322],
        [66, 447],
        [194, 319],
        [63, 450],
        [15, 498],
        [242, 271],
        [143, 370],
        [114, 399],
        [178, 335],
        [79, 434],
        [207, 306],
        [50, 463],
        [1, 512],
        [256, 257],
        [129, 384],
        [128, 385],
        [192, 321],
        [65, 448],
        [193, 320],
        [64, 449],
        [16, 497],
        [241, 272],
        [144, 369],
        [113, 400],
        [177, 336],
        [80, 433],
        [208, 305],
        [49, 464],
        [8, 505],
        [249, 264],
        [136, 377],
        [121, 392],
        [185, 328],
        [72, 441],
        [200, 313],
        [57, 456],
        [9, 504],
        [248, 265],
        [137, 376],
        [120, 393],
        [184, 329],
        [73, 440],
        [201, 312],
        [56, 457],
        [5, 508],
        [252, 261],
        [133, 380],
        [124, 389],
        [188, 325],
        [69, 444],
        [197, 316],
        [60, 453],
        [12, 501],
        [245, 268],
        [140, 373],
        [117, 396],
        [181, 332],
        [76, 437],
        [204, 309],
        [53, 460],
        [4, 509],
        [253, 260],
        [132, 381],
        [125, 388],
        [189, 324],
        [68, 445],
        [196, 317],
        [61, 452],
        [13, 500],
        [244, 269],
        [141, 372],
        [116, 397],
        [180, 333],
        [77, 436],
        [205, 308],
        [52, 461],
        [6, 507],
        [251, 262],
        [134, 379],
        [123, 390],
        [187, 326],
        [70, 443],
        [198, 315],
        [59, 454],
        [11, 502],
        [246, 267],
        [139, 374],
        [118, 395],
        [182, 331],
        [75, 438],
        [203, 310],
        [54, 459],
        [3, 510],
        [254, 259],
        [131, 382],
        [126, 387],
        [190, 323],
        [67, 446],
        [195, 318],
        [62, 451],
        [14, 499],
        [243, 270],
        [142, 371],
        [115, 398],
        [179, 334],
        [78, 435],
        [206, 307],
        [51, 462],
        [7, 506],
        [250, 263],
        [135, 378],
        [122, 391],
        [186, 327],
        [71, 442],
        [199, 314],
        [58, 455],
        [10, 503],
        [247, 266],
        [138, 375],
        [119, 394],
        [183, 330],
        [74, 439],
        [202, 311],
        [55, 458],
        [2, 511],
        [255, 258],
        [130, 383],
        [127, 386],
        [191, 322],
        [66, 447],
        [194, 319],
        [63, 450],
        [15, 498],
        [242, 271],
        [143, 370],
        [114, 399],
        [178, 335],
        [79, 434],
        [207, 306],
        [50, 463],
      ],
    },
  ])('orders $size-team tournament correctly', ({ size, input, expected }) => {
    const result = orderFirstRoundMatchups(input);
    expect(result.length).toBe(size / 2);
    expect(result).toEqual(expected);
    result.forEach((matchup) => {
      expect(matchup.length).toBe(2);
      expect(matchup[0] + matchup[1]).toBe(size + 1);
    });
    if (size > 2) {
      for (let i = 0; i < result.length; i += 2) {
        const currentMatchup = result[i];
        const nextMatchup = result[i + 1];
        expect(currentMatchup[0] + nextMatchup[0]).toBe(size / 2 + 1);
      }
    }
  });

  it('throws an error when the number of teams is not a power of two', () => {
    expect(() =>
      orderFirstRoundMatchups([
        [1, 2],
        [3, 4],
        [5, 6],
      ]),
    ).toThrow('Number of teams must be a power of two');
  });

  it('throws an error when there are not enough teams', () => {
    expect(() => orderFirstRoundMatchups([])).toThrow('Must have at least 2 teams');
  });
});
